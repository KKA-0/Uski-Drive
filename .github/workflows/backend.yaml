name: "BackEnd CI/CD"

on:
  pull_request:
    branches:
      - main
    paths:
      - "backend/**"
      - ".github/**"
      - "infra/**"
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - ".github/**"
      - "infra/**"
  workflow_dispatch:

jobs:
  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend

    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: "Run NPM Audit"
        run: npm audit --audit-level=high || true
        
      - name: "Run Snyk Security Scan"
        uses: snyk/actions/node@master
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
  deployment:
    runs-on: ubuntu-latest
    needs: [security]
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    defaults:
      run:
        shell: bash
        working-directory: backend

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: "Create .env file"
        run: |
          echo 'region="ap-south-1"' >> .env
          echo 'privateKey="${{ secrets.PRIVATE_KEY }}"' >> .env
          echo 'Table="${{ secrets.DYNAMODB_TABLE }}"' >> .env
          echo 'Bucket="${{ secrets.S3_BUCKET }}"' >> .env
          echo 'FilesTable="${{ secrets.FILES_TABLE }}"' >> .env

      - name: "Install Dependencies"
        run: npm install

      - name: "Create Deployment Package"
        run: zip -qq -r ../infra/functions.zip .

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_ORG_TOKEN }}

      - name: "Terraform Init"
        run: terraform init
        working-directory: infra
      
      - name: "Terraform Plan"
        run: terraform plan || (echo "Plan unsuccessful, check logs" && exit 1)
        working-directory: infra

      - name: "Terraform Apply"
        run: terraform apply -auto-approve || (echo "Apply unsuccessful, check logs" && exit 1)
        working-directory: infra

      - name: "Upload functions.zip to GitHub Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION=$(date +%Y%m%d%H%M%S)
          TAG="backend-release-${VERSION}"
          FILE_PATH="../infra/functions.zip"
          RELEASE_NAME="Backend"
          gh release create "$TAG" "$FILE_PATH" -t "$RELEASE_NAME" -n "Deployment Package for Backend CI/CD"
