name: Frontend CI/CD

on:
  pull_request:
    branches:
      - main
    paths:
      - "frontend/**"
      - ".github/frontend.yaml"
  push:
    branches:
      - main
    paths:
      - "frontend/**"
      - ".github/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install zip
      uses: montudor/action-zip@v1

    - name: Create .env
      run: echo 'VITE_APP_DOMAIN="${{ secrets.BACKEND_URL }}"' >> .env

    - name: Install dependencies
      run: npm install

    - name: Build the frontend
      run: npm run build

    - name: Archive production artifacts
      run: zip -r build.zip dist/

    - name: Upload production artifacts
      uses: actions/upload-artifact@v4.5.0
      with:
        name: build-artifact
        path: frontend/build.zip

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=ghcr.io/KKA-0/uski-drive-frontend:cache
        push: true
        tags: ghcr.io/KKA-0/uski-drive-frontend:latest

  release:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
        
    - name: Print Folder Tree
      uses: jaywcjlove/github-action-folder-tree@main
      with:
        path: .
        depth: 3
  

    - name: Upload build.zip to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      run: |
        VERSION=$(date +%Y%m%d%H%M%S)
        TAG="frontend-release-${VERSION}"
        FILE_PATH="build.zip"
        RELEASE_NAME="Frontend"
        gh release create "$TAG" "$FILE_PATH" -t "$RELEASE_NAME" -n "Deployment Package for Frontend CI/CD"
