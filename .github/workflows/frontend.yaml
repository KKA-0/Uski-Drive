name: Frontend CI/CD

on:
  pull_request:
    branches:
      - main
    paths:
      - "frontend/**"
      - ".github/**"
  push:
    branches:
      - main
    paths:
      - "frontend/**"
      - ".github/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install zip
      uses: montudor/action-zip@v1

    - name: Install dependencies
      run: npm install

    - name: Build the frontend
      run: npm run build

    - name: Archive production artifacts
      run: zip -r build.zip dist/

    - name: Upload production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: build.zip

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/uskidrive-frontend:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/uskidrive-frontend:${{ github.sha }}

  release:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifact

    - name: Upload build.zip to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(date +%Y%m%d%H%M%S)
        TAG="frontend-release-${VERSION}"
        FILE_PATH="build-artifact/build.zip"
        RELEASE_NAME="Frontend"
        gh release create "$TAG" "$FILE_PATH" -t "$RELEASE_NAME" -n "Deployment Package for Frontend CI/CD"
